{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "deploymentPrefix": {
        "type": "string",
        "defaultValue": "poc"
      },
      "resourceGroup": {
        "type": "string",
        "defaultValue": "testarm"
      },
      "addressRange": {
        "type": "String",
        "defaultValue":"192.168.1.0/24",
        "metadata": {
          "description": "Administrator password for the local admin account"
        }
      },
      "subnets": {
        "type": "array",
        "defaultValue": [
          "APIM-SN|192.168.1.224/28|Enabled",
          "AKS-SN|192.168.1.0/25|Enabled",
          "Data-SN|192.168.1.176/28|Disabled",
          "Shared-SN|192.168.1.160/28|Enabled",
          "AzureBastionSubnet|192.168.1.128/28|Enabled",
          "AppGW-SN|192.168.1.144/28|Enabled"
        ]
      },
      "appgwtier": {
        "type": "string",
        "defaultValue": "WAF_v2"
      },
      "appgwskuSize": {
          "type": "string",
          "defaultValue": "WAF_v2"
      },
      "appgwzones": {
          "type": "array",
          "defaultValue": [
                  "1",
                  "2",
                  "3"
          ]
      },
      "appgwMinCapacity": {
          "type": "int",
          "defaultValue": 1
      },
      "appgwMaxCapacity": {
          "type": "int",
          "defaultValue": 3
      },
      "certificates": {
          "type": "array",
          "defaultValue": [
            "ARMCert|ARM/df47f485ecb1455d98eae9a950af6f47",
          ]
      },
      "keyVaultResourceGroup": {
          "type": "string",
          "defaultValue": "Lab"
      },
      "apimsku": {
        "type": "string",
        "defaultValue": "Developer"
      },
      "apimcapacity": {
        "type": "int",
        "defaultValue": 1
      },
      "apimEmail": {
        "type": "string",
        "defaultValue": "do-not-reply@microsoft.com"
      },
      "apimPublisherName": {
          "type": "string",
          "defaultValue": "POC Architecture"
      },
      "apimVirtualNetworkType": {
          "type": "string",
          "defaultValue": "Internal"
      },
      "kubernetesVersion": {
        "type": "string",
        "defaultValue": "1.15.11"
      },
      "networkPlugin": {
          "type": "string",
          "defaultValue": "azure"
      },
      "enableRBAC": {
          "type": "bool",
          "defaultValue": true
      },
      "enablePrivateCluster": {
          "type": "bool",
          "defaultValue": true
      },
      "enableHttpApplicationRouting": {
          "type": "bool",
          "defaultValue": true
      },
      "networkPolicy": {
          "type": "string",
          "defaultValue": "calico"
      },
      "adminUserName": {
        "type": "string",
        "defaultValue": "azureuser"
      },
      "adminPassword": {
        "type": "securestring",
        "defaultValue": "1qaz@WSX3edc$RFV"
      },
      "guid": {
        "type": "string",
        "defaultValue": "[newGuid()]"
      },
      "aksNetworkGuid": {
        "type": "string",
        "defaultValue": "[newGuid()]"
      },
      "aksACRGuid": {
        "type": "string",
        "defaultValue": "[newGuid()]"
      },
      "lbIP": {
        "type": "string",
        "defaultValue": "192.168.1.126",
        "metadata": {
          "description": "IP address to be assigned to AKS LoadBalancer. Should be in the AKS-SN range"
        }
      }
    },
    "variables": {
      "gitUri": "https://raw.githubusercontent.com/bwatts64/SoutheastCSA/master/ARM%20Templates/NestedTemplates",
      "dscUri": "https://raw.githubusercontent.com/bwatts64/SoutheastCSA/master/ARM%20Templates/dsc",
      "deployVNETTemplateURL": "[concat(variables('gitUri'),'/VNet.json')]",
      "deployNSGTemplateURL": "[concat(variables('gitUri'),'/NSG-ExistingSubnet.json')]",
      "deployNSGEmptyTemplateURL": "[concat(variables('gitUri'),'/NSG-Empty-ExistingSubnet.json')]",
      "deployPublicIPTemplateURL": "[concat(variables('gitUri'),'/PublicIPAddress.json')]",
      "deployAppGWHTTPSListenerKVTemplateURL": "[concat(variables('gitUri'),'/AppGWHTTPSListenerKV.json')]",
      "createManagedIdentityTemplateURL": "[concat(variables('gitUri'),'/UserAssignedManagedIdentity.json')]",
      "deployAppGWDiagnosticsTemplateURL": "[concat(variables('gitUri'),'/AppGWDiagnostics.json')]",
      "deployAzureBastionDiagnosticsTemplateURL": "[concat(variables('gitUri'),'/AzureBastionDiagnostics.json')]",
      "deploySQLDBDiagnosticsTemplateURL": "[concat(variables('gitUri'),'/SQLDBDiagnostics.json')]",
      "getSubnetAddressPrefixTemplateURL": "[concat(variables('gitUri'),'/GetSubnetAddressPrefix.json')]",
      "deployKeyVaultAccessTemplate": "[concat(variables('gitUri'),'/KeyVaultAccessPolicy.json')]",
      "deployLATemplateURL": "[concat(variables('gitUri'),'/Log_Analytics_Workspace.json')]",
      "deployAPIMTemplateURL": "[concat(variables('gitUri'),'/APIM.json')]",
      "deployAzureAKSTemplateURL": "[concat(variables('gitUri'),'/AKSMICluster.json')]",
      "deployACRTemplateURL": "[concat(variables('gitUri'),'/ACR.json')]",
      "deployAppInsightsURL": "[concat(variables('gitUri'),'/ApplicationInsights.json')]",
      "deployPrivateEndpointTemplateURL": "[concat(variables('gitUri'),'/PrivateEndpoint.json')]",
      "deployDNSZoneTemplateURL": "[concat(variables('gitUri'),'/PrivateDNSZone.json')]",
      "deployAzureBastionTemplateURL": "[concat(variables('gitUri'),'/AzureBastion.json')]",
      "getNICIPURL": "[concat(variables('gitUri'),'/GetNicIP.json')]",
      "deployDNSARecordTemplateURL": "[concat(variables('gitUri'),'/PrivateDNSARecord.json')]",
      "deployAzureSqlDbURL": "[concat(variables('gitUri'),'/SQLDB.json')]",
      "deployWindowsServerTemplateURL": "[concat(variables('gitUri'),'/WindowsVirtualMachine.json')]",
      "grantRBACTemplateURL": "[concat(variables('gitUri'),'/RBACRoleAssignment.json')]",
      "customRoleTemplateURL": "[concat(variables('gitUri'),'/CustomRole.json')]",
      "addVMInsightsURL": "[concat(variables('gitUri'),'/EnableVMInsights.json')]",
      "addDSCExtension": "[concat(variables('gitUri'),'/DSCExtension.json')]",
      "laName": "[concat(parameters('deploymentPrefix'),'la',uniqueString(parameters('resourceGroup')))]",
      "appInsightsName": "[concat(parameters('deploymentPrefix'),'ai',uniqueString(parameters('resourceGroup')))]",
      "vnetName": "[concat(parameters('deploymentPrefix'),'vnet',uniqueString(parameters('resourceGroup')))]",
      "applicationGatewayName": "[concat(parameters('deploymentPrefix'),'appgw',uniqueString(parameters('resourceGroup')))]",
      "keyVaultName": "labVaultwb",
      "acrName": "[concat(parameters('deploymentPrefix'),'acr',uniqueString(parameters('resourceGroup')))]",
      "apimName": "[concat(parameters('deploymentPrefix'),'apim',uniqueString(parameters('resourceGroup')))]",
      "AksresourceName":"[concat(parameters('deploymentPrefix'),'-AKSResource')]",
      "nodeResourceGroup":"[concat(parameters('deploymentPrefix'),'-AKSRG',uniqueString(parameters('resourceGroup')))]",
      "dnsPrefix":"[concat(variables('AksresourceName'),'-dns')]",
      "serviceCidr":"10.0.0.0/24",
      "dnsServiceIP":"10.0.0.10",
      "dockerBridgeCidr":"172.17.0.1/24",
      "sqlDatabaseName": "[concat(parameters('deploymentPrefix'),'-sqldb',uniqueString(parameters('resourceGroup')))]",
      "sqlServerName": "[concat(parameters('deploymentPrefix'),'-sqlserver',uniqueString(parameters('resourceGroup')))]",
      "jumpName": "[concat(parameters('deploymentPrefix'),'-jumpvm')]",
      "jumpSKU": "2019-Datacenter",
      "jumpSize": "Standard_DS1_v2",
      "bastionHostName": "[concat(parameters('deploymentPrefix'),'-bastion',uniqueString(parameters('resourceGroup')))]",
      "jumpConfigModuleURL": "[concat(variables('dscUri'),'/PrepareJumpBox.zip')]",
      "jumpConfigFunction": "PrepareJumpBox.ps1\\configJumpBox"
    },
    "resources": [
      {
        "name": "deployLogAnalytics",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployLATemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "workspaceName": {
              "value": "[variables('laName')]"
            }
          }
        }
      },
      {
        "name": "deployAppInsights",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAppInsightsURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "name": {
              "value": "[variables('appInsightsName')]"
            }
          }
        }
      },
      {
        "name": "deployVNET",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployVNETTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vNETName": {
              "value": "[variables('vnetName')]"
            },
            "addressRange": {
              "value": "[parameters('addressRange')]"
            },
            "subnets": {
              "value": "[parameters('subnets')]"
            }
          }
        }
      },
      {
        "name": "getAppGWAddressPrefix",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getSubnetAddressPrefixTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "AppGW-SN"
            }
          }
        }
      },
      {
        "name": "deployAppGWNSG",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getAppGWAddressPrefix"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployNSGTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "AppGW-SN"
            },
            "addressPrefix": {
              "value": "[reference('getAppGWAddressPrefix').outputs.addressPrefix.value]"
            },
            "nsgName": {
              "value": "AppGW-NSG"
            },
            "securityRules": {
              "value": [
                "deny-all|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
                "allow-443|Allow-SSL|Tcp|*|443|*|*|Allow|100|Inbound",
                "allow-8080|Allow-SSL|Tcp|*|8080|*|*|Allow|110|Inbound",
                "allow-HealthProbe|Allow-AppGWHealth|Tcp|*|65200-65535|*|*|Allow|120|Inbound"
              ]
            }
          }
        }
      },
      {
        "name": "getAPIMAddressPrefix",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deploySharedNSG"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getSubnetAddressPrefixTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "APIM-SN"
            }
          }
        }
      },
      {
        "name": "deployAPIMNSG",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getAPIMAddressPrefix"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployNSGTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "APIM-SN"
            },
            "addressPrefix": {
              "value": "[reference('getAPIMAddressPrefix').outputs.addressPrefix.value]"
            },
            "nsgName": {
              "value": "APIM-NSG"
            },
            "securityRules": {
              "value": [
                "allow-443|Allow-SSL|Tcp|*|443|192.168.1.144/28|*|Allow|100|Inbound",
                "allow-443-mgmt|Allow-Management|Tcp|*|3443|ApiManagement|VirtualNetwork|Allow|120|Inbound",
                "allow-azure-storage|Allow-Storage-Account|Tcp|*|443|VirtualNetwork|Storage|Allow|100|Outbound",
                "allow-azure-ad|Allow-Azure-AD|Tcp|*|443|VirtualNetwork|AzureActiveDirectory|Allow|110|Outbound",
                "allow-event-hub|Allow-EventHub|Tcp|*|5671-5672|VirtualNetwork|EventHub|Allow|120|Outbound",
                "allow-event-hub-443|Allow-EventHub|Tcp|*|443|VirtualNetwork|EventHub|Allow|130|Outbound",
                "allow-file-share|Allow-FileShare|Tcp|*|445|VirtualNetwork|Storage|Allow|140|Outbound",
                "allow-health-status|Allow-Health-Status|Tcp|*|443|VirtualNetwork|AzureCloud|Allow|150|Outbound",
                "allow-azure-monitor|Allow-Azure-Monitor|Tcp|*|443|VirtualNetwork|AzureMonitor|Allow|160|Outbound",
                "allow-azure-cache-ob|Allow-Azure-Cahce|Tcp|*|6381-6383|VirtualNetwork|VirtualNetwork|Allow|170|Outbound",
                "allow-azure-cache-ib|Allow-Azure-Cahce|Tcp|*|6381-6383|VirtualNetwork|VirtualNetwork|Allow|130|Inbound",
                "allow-rate-limit-ib|Allow-Rate-Limit-Policy|UDP|*|4290|VirtualNetwork|VirtualNetwork|Allow|140|Inbound",
                "allow-rate-limit-ob|Allow-Rate-Limit-Policy|UDP|*|4290|VirtualNetwork|VirtualNetwork|Allow|180|Outbound",
                "allow-loadbalancer-ib|Allow-Azure-Load-Balancer|Tcp|*|*|AzureLoadBalancer|VirtualNetwork|Allow|150|Inbound"
              ]
            }
          }
        }
      },
      {
        "name": "getAKSAddressPrefix",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAPIMNSG"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getSubnetAddressPrefixTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "AKS-SN"
            }
          }
        }
      },
      {
        "name": "deployAKSNSG",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getAKSAddressPrefix"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployNSGEmptyTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "AKS-SN"
            },
            "addressPrefix": {
              "value": "[reference('getAKSAddressPrefix').outputs.addressPrefix.value]"
            },
            "nsgName": {
              "value": "AKS-NSG"
            }
          }
        }
      },
      {
        "name": "getDataAddressPrefix",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAKSNSG"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getSubnetAddressPrefixTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "Data-SN"
            }
          }
        }
      },
      {
        "name": "deployDataNSG",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getDataAddressPrefix"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployNSGTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "Data-SN"
            },
            "addressPrefix": {
              "value": "[reference('getDataAddressPrefix').outputs.addressPrefix.value]"
            },
            "nsgName": {
              "value": "Data-NSG"
            },
            "securityRules": {
              "value": [
                "deny-all-ib|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
                "deny-all-ob|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Outbound"
              ]
            },
            "privateEndpointNetworkPolicies": {
              "value": "Disabled"
            }
          }
        }
      },
      {
        "name": "getSharedAddressPrefix",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAppGWNSG"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getSubnetAddressPrefixTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "Shared-SN"
            }
          }
        }
      },
      {
        "name": "getBastionAddressPrefix",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAppGWNSG"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getSubnetAddressPrefixTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vnetName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "AzureBastionSubnet"
            }
          }
        }
      },
      {
        "name": "deploySharedNSG",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getSharedAddressPrefix"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployNSGTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "virtualNetworkName": {
              "value": "[variables('vnetName')]"
            },
            "subnetName": {
              "value": "Shared-SN"
            },
            "addressPrefix": {
              "value": "[reference('getSharedAddressPrefix').outputs.addressPrefix.value]"
            },
            "nsgName": {
              "value": "Shared-NSG"
            },
            "securityRules": {
              "value": [
                "deny-all|Deny-All-Traffic|Tcp|*|*|*|*|Deny|500|Inbound",
                "[concat('allow-bastion|Allow-Bastion-Host|Tcp|*|*|',reference('getBastionAddressPrefix').outputs.addressPrefix.value,'|*|Allow|100|Inbound')]"
              ]
            }
          }
        }
      },
      {
        "name": "deployPublicIP1",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployPublicIPTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "publicIpAddressName": {
              "value": "[concat(variables('applicationGatewayName'),'pip1')]"
            },
            "sku": {
                "value": "Standard"
            },
            "allocationMethod": {
                "value": "Static"
            }
          }
        }
      },
      {
        "name": "createManagedIdentity",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('createManagedIdentityTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "identityName": {
                "value": "[concat(variables('applicationGatewayName'),'-identity')]"
            }
          }
        }
      },
      {
        "name": "deployKeyVaultAccess",
        "type": "Microsoft.Resources/deployments",
        "resourceGroup": "[parameters('keyVaultResourceGroup')]",
        "apiVersion": "2018-05-01",
        "dependsOn": [
          "createManagedIdentity"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployKeyVaultAccessTemplate')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "keyVaultName": {
                "value": "[variables('keyVaultName')]"
            },
            "secrets": {
                "value": [
                    "Get",
                    "List",
                    "Set",
                    "Delete",
                    "Recover",
                    "Backup",
                    "Restore"
                ]
            },
            "objectId": {
                "value": "[reference('createManagedIdentity').outputs.principalId.value]"
            }
          }
        }
      },
      {
        "name": "deployAppGW",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET",
          "deployPublicIP1"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAppGWHTTPSListenerKVTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "applicationGatewayName": {
                "value": "[variables('applicationGatewayName')]"
            },
            "tier": {
                "value": "[parameters('appgwtier')]"
            },
            "skuSize": {
                "value": "[parameters('appgwskuSize')]"
            },
            "minCapacity": {
                "value": "[parameters('appgwMinCapacity')]",
            },
            "maxCapacity": {
                "value": "[parameters('appgwMaxCapacity')]",
            },
            "zones": {
                "value": "[parameters('appgwzones')]"
            },
            "subnetID": {
                "value": "[concat(reference('deployVNET').outputs.vnetId.value,'/subnets/AppGW-SN')]"
            },
            "publicIpAddressesIds": {
                "value": [
                  "[concat('PIP1|',reference('deployPublicIP1').outputs.publicIPID.value )]"
                ]
            },
            "keyVaultName": {
              "value": "[variables('keyVaultName')]"
            },
            "identityID": {
                "value": "[reference('createManagedIdentity').outputs.resourceId.value]"
            },
            "certificates": {
                "value": "[parameters('certificates')]"
            },
            "frontendPorts": {
                "value": [
                  "HTTPS-443|443"
                ]
            },
            "backendAddresses": {
                "value": [
                  "[concat('AKSLB|', parameters('lbIP'))]"
                ]
            },
            "backendHttpSettings": {
                "value": [
                  "AKS-BE|80|Http|Disabled|30|/"
                ]
            },
            "httpListeners": {
                "value": [
                  "HTTPSListener|PIP1|HTTPS-443"
                ]
            },
            "requestRoutingRules": {
                "value": [
                  "AKS-RoutingRule|HTTPSListener|AKSLB|AKS-BE"
                ]
            }
          }
        }
      },
      {
        "name": "deployAppGWDiagnostics",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAppGW",
          "deployLogAnalytics"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAppGWDiagnosticsTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "workspaceId": {
                "value": "[reference('deployLogAnalytics').outputs.workspaceId.value]"
            },
            "logs": {
                "value": [
                  "ApplicationGatewayAccessLog",
                  "ApplicationGatewayPerformanceLog",
                  "ApplicationGatewayFirewallLog"
                ]
            },
            "metrics": {
                "value": [
                  "AllMetrics"
                ]
            },
            "appgwName": {
              "value": "[variables('applicationGatewayName')]"
            }
          }
        }  
      },
      {
        "name": "deployAPIM",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
            "deployVNET"
        ],
        "properties": {
            "mode": "Incremental",
            "templateLink": {
            "uri": "[variables('deployAPIMTemplateURL')]",
            "contentVersion": "1.0.0.0"
            },
            "parameters": {
                "apimname": {
                    "value": "[variables('apimName')]"
                },
                "sku": {
                    "value": "[parameters('apimsku')]"
                },
                "capacity": {
                    "value": "[parameters('apimcapacity')]"
                },
                "apimEmail": {
                    "value": "[parameters('apimEmail')]"
                },
                "subnetID": {
                    "value": "[concat(reference('deployVNET').outputs.vnetId.value,'/subnets/APIM-SN')]"
                },
                "publisherName": {
                    "value": "[parameters('apimPublisherName')]"
                },
                "virtualNetworkType": {
                    "value": "[parameters('apimVirtualNetworkType')]"
                },
                "disableGateway": {
                  "value": false
                },
                "loggerName":{
                  "value": "[variables('appInsightsName')]"
                },
                "workspaceID": {
                  "value": "[reference('deployLogAnalytics').outputs.workspaceId.value]"
                },
                "appinsightsID": {
                  "value": "[reference('deployAppInsights').outputs.appInsightsID.value]"
                }
            }
        }
      },
      {
        "name": "deployACR",
        "comments":"apiVersion is flagged, but haven't changed as not sure if this is needed for some features.",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployACRTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "acrName": {
              "value": "[variables('acrName')]"
            }
          }
        }
      },
      {
        "name": "deployACRPrivateEndpoint",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployACR"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployPrivateEndpointTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "peName": {
              "value": "[variables('acrName')]"
            },
            "resourceID": {
              "value": "[reference('deployACR').outputs.acrId.value]"
            },
            "vnetID": {
              "value": "[reference('deployVNET').outputs.vnetId.value]"
            },
            "subnetName": {
              "value": "Data-SN"
            },
            "groupID": {
              "value": "registry"
            }
          }
        }
      },
      {
        "name": "deployACRDNSZone",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployDNSZoneTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "zoneName": {
              "value": "privatelink.azure.io"
            },
            "vnetID": {
              "value": "[reference('deployVNET').outputs.vnetID.value]"
            }
          }
        }
      },
      {
        "name": "getACRNICIP",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployACRPrivateEndpoint"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getNICIPUrL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "nicID": {
              "value": "[reference('deployACRPrivateEndpoint').outputs.nicID.value]"
            }
          }
        }
      },
      {
        "name": "deployACRDNSARecord",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getACRNICIP"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployDNSARecordTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "zoneName": {
              "value": "privatelink.azure.io"
            },
            "recordName": {
              "value": "[variables('acrName')]"
            },
            "recordValue": {
              "value": "[reference('getACRNICIP').outputs.nicIP.value]"
            }
          }
        }
      },  
      {
        "name": "deployAKSCluster",
        "comments":"apiVersion is flagged, but haven't changed as not sure if this is needed for some features.",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2019-10-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAzureAKSTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "AksresourceName": {
              "value": "[variables('AksresourceName')]"
            },
            "nodeResourceGroup":{
              "value": "[variables('nodeResourceGroup')]"
            },
            "VNetName" : {
              "value": "[variables('vNETName')]"
            },
            "SubnetName" : {
              "value": "AKS-SN"
            },  
            "dnsPrefix": {
                "value": "[variables('dnsPrefix')]"
            },
            "kubernetesVersion": {
                "value": "[parameters('kubernetesVersion')]"
            },
            "networkPlugin": {
                "value": "[parameters('networkPlugin')]"
            },
            "enableRBAC": {
                "value": "[parameters('enableRBAC')]"
            },
            "enablePrivateCluster": {
                "value": "[parameters('enablePrivateCluster')]"
            },
            "enableHttpApplicationRouting": {
                "value": "[parameters('enableHttpApplicationRouting')]"
            },
            "networkPolicy": {
                "value": "[parameters('networkPolicy')]"
            },
            "vnetSubnetID": {
                "value": "[concat(reference('deployVNET').outputs.vnetId.value,'/subnets/AKS-SN')]"
            },
            "serviceCidr": {
                "value": "[variables('serviceCidr')]"
            },
            "dnsServiceIP": {
                "value": "[variables('dnsServiceIP')]"
            },
            "dockerBridgeCidr": {
                "value": "[variables('dockerBridgeCidr')]"
            },
            "enableNodePublicIP": {
              "value": false
            }
        }
       }
      },
      {
        "name": "grantAKSMINetworkRole",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAKSCluster"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('grantRBACTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "roleAssignmentName": {
              "value": "[parameters('aksNetworkGuid')]"
            },
            "roleDefinitionId": {
              "value": "4d97b98b-1d4f-4787-a291-c67834d212e7"
            },
            "principalId": {
              "value": "[reference('deployAKSCluster').outputs.aksPrincipalId.value]"
            },
            "scope": {
              "value": "[concat(subscription().id,'/resourceGroups/',parameters('resourceGroup'))]"
            }
          }
        }
      },
      {
        "name": "grantAKSACRRole",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAKSCluster"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('grantRBACTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "roleAssignmentName": {
              "value": "[parameters('aksACRGuid')]"
            },
            "roleDefinitionId": {
              "value": "7f951dda-4ed3-4680-a7ca-43fe172d538d"
            },
            "principalId": {
              "value": "[reference('deployAKSCluster').outputs.poolPrincipalId.value]"
            }
          }
        }
      },
      {
        "name": "deploySqlDb",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAzureSqlDbURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "collation": {
              "value": "SQL_Latin1_General_CP1_CI_AS"
            },
            "databaseName": {
                "value": "[variables('sqlDatabaseName')]"
            },
            "tier": {
                "value": "GeneralPurpose"
            },
            "skuName": {
                "value": "GP_S_Gen5_24"
            },
            "maxSizeBytes": {
                "value": 1099511627776
            },
            "sampleName": {
                "value": ""
            },
            "serverName": {
                "value": "[variables('sqlServerName')]"
            },
            "zoneRedundant": {
                "value": false
            },
            "licenseType": {
                "value": ""
            },
            "readScaleOut": {
                "value": "Disabled"
            },
            "numberOfReplicas": {
                "value": 0
            },
            "minCapacity": {
                "value": "3"
            },
            "autoPauseDelay": {
                "value": "180"
            },
            "useVAManagedIdentity": {
                "value": true
            },
            "administratorLogin": {
              "value": "[parameters('adminUsername')]"
            },
            "administratorLoginPassword": {
                "value": "[parameters('adminPassword')]"
            },
            "publicNetworkAccess": {
              "value": "Disabled"
            }
          }
        }
      },
      {
        "name": "deploySQLDBDiagnostics",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deploySqlDb",
          "deployLogAnalytics"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deploySQLDBDiagnosticsTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "workspaceId": {
                "value": "[reference('deployLogAnalytics').outputs.workspaceId.value]"
            },
            "logs": {
                "value": [
                  "AutomaticTuning",
                  "QueryStoreRuntimeStatistics",
                  "QueryStoreWaitStatistics",
                  "Errors",
                  "DatabaseWaitStatistics",
                  "Timeouts",
                  "Blocks",
                  "Deadlocks"
                ]
            },
            "metrics": {
                "value": [
                  "Basic",
                  "InstanceAndAppAdvanced",
                  "WorkloadManagement"
                ]
            },
            "sqldbName": {
              "value": "[concat(variables('sqlServerName'),'/',variables('sqlDatabaseName'))]"
            }
          }
        }  
      },
      {
        "name": "deploySqlServerPE",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deploySqlDb",
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployPrivateEndpointTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "peName": {
              "value": "[concat(variables('sqlServerName'),'_pe')]"
            },
            "resourceID": {
              "value": "[reference('deploySqlDb').outputs.sqlServerId.value]"
            },
            "vnetID": {
              "value": "[reference('deployVNET').outputs.vnetId.value]"
            },
            "subnetName": {
              "value": "Data-SN"
            },
            "groupID": {
              "value": "SqlServer"
            }
          }
        }
      },
      {
        "name": "deploySqlDbDNSZone",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployDNSZoneTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "zoneName": {
              "value": "privatelink.database.windows.net"
            },
            "vnetID": {
              "value": "[reference('deployVNET').outputs.vnetID.value]"
            }
          }
        }
      },
      {
        "name": "getSqlServerNICIP",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deploySqlServerPE"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('getNICIPUrL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "nicID": {
              "value": "[reference('deploySqlServerPE').outputs.nicID.value]"
            }
          }
        }
      },
      {
        "name": "deploySQLDNSARecord",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "getACRNICIP"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployDNSARecordTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "zoneName": {
              "value": "privatelink.database.windows.net"
            },
            "recordName": {
              "value": "[variables('sqlServerName')]"
            },
            "recordValue": {
              "value": "[reference('getSqlServerNICIP').outputs.nicIP.value]"
            }
          }
        }
      },
      {
        "name": "deployJumpBox",
        "comments":"NOTE: OS and Datadisks cannot be tagged when provisioned within VM.  Would need to provision DISK with tags first, then reference",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployWindowsServerTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "subnetID": {
              "value": "[concat(reference('deployVNET').outputs.vnetId.value,'/subnets/Shared-SN')]"
            },
            "virtualMachineName": {
              "value": "[variables('jumpName')]"
            },
            "virtualMachineSize": {
              "value": "[variables('jumpSize')]"
            },
            "adminUsername": {
              "value": "[parameters('adminUserName')]"
            },
            "adminPassword": {
              "value": "[parameters('adminPassword')]"
            },
            "sku": {
              "value": "[variables('jumpSKU')]"
            }
          }
        }
      },
      {
        "name": "addJumpBoxInsights",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployJumpBox"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('addVMInsightsURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "VmResourceId": {
              "value": "[reference('deployJumpBox').outputs.vmID.value]"
            },
            "osType": {
              "value": "Windows"
            },
            "WorkspaceResourceId": {
              "value": "[reference('deployLogAnalytics').outputs.workspaceId.value]"
            }
          }
        }
      },
      {
        "name": "grantMIRole",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployJumpBox"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('grantRBACTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "roleAssignmentName": {
              "value": "[parameters('guid')]"
            },
            "roleDefinitionId": {
              "value": "b24988ac-6180-42a0-ab88-20f7382dd24c"
            },
            "principalId": {
              "value": "[reference('deployJumpBox').outputs.principalID.value]"
            },
            "scope": {
              "value": "[concat(subscription().id,'/resourceGroups/',parameters('resourceGroup'))]"
            }
          }
        }
      },
      {
        "name": "createFeatureRole",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('customRoleTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "roleName": {
              "value": "FeatureRegistrationContributor"
            },
            "Description": {
              "value": "Allow registration of feature on the subscription"
            },
            "Actions": {
              "value": [
                "Microsoft.Features/providers/features/register/action"
              ]
            },
            "Scope": {
              "value": [
                "[subscription().id]",
                "[concat(subscription().id,'/resourceGroups/',parameters('resourceGroup'))]"
              ]
            }
          }
        }
      },
      {
        "name": "grantMIFeatureRole",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployJumpBox",
          "createFeatureRole"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('grantRBACTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "roleAssignmentName": {
              "value": "[parameters('guid')]"
            },
            "roleDefinitionId": {
              "value": "[reference('createFeatureRole').outputs.roleDefinitionName.value]"
            },
            "principalId": {
              "value": "[reference('deployJumpBox').outputs.principalID.value]"
            },
            "scope": {
              "value": "[subscription().id]"
            }
          }
        }
      },
      {
        "name": "configJumpBox",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployJumpBox",
          "grantMIRole",
          "deployAKSCluster"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('addDSCExtension')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "vmName": {
              "value": "[variables('jumpName')]"
            },
            "configModuleURL": {
              "value": "[variables('jumpConfigModuleURL')]"
            },
            "configFunction": {
              "value": "[variables('jumpConfigFunction')]"
            },
            "lbIP": {
              "value": "[parameters('lbIP')]"
            },
            "acrName": {
              "value": "[variables('acrName')]"
            },
            "aksName": {
              "value": "[variables('AksresourceName')]"
            },
            "gwName": {
              "value": "[variables('applicationGatewayName')]"
            },
            "rgName": {
              "value": "[parameters('resourceGroup')]"
            }
          }
        }
      },
      {
        "name": "deployAzureBastionPIP",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployPublicIPTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "publicIpAddressName": {
              "value": "[concat(variables('bastionHostName'),'-pip')]"
            },
            "sku": {
                "value": "Standard"
            },
            "allocationMethod": {
                "value": "Static"
            }
          }
        }
      },
      {
        "name": "deployAzureBastion",
        "comments":"",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployVNET",
          "deployAzureBastionPIP"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAzureBastionTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "bastionHostName": {
                "value": "[variables('bastionHostName')]"
            },
            "subnetId": {
                "value": "[concat(reference('deployVNET').outputs.vnetId.value,'/subnets/AzureBastionSubnet')]"
            },
            "publicIpId": {
                "value": "[reference('deployAzureBastionPIP').outputs.publicIPID.value]"
            }
          }
        }
      },
      {
        "name": "deployAzureBastionDiagnostics",
        "type": "Microsoft.Resources/deployments",
        "apiVersion": "2018-05-01",
        "resourceGroup": "[parameters('resourceGroup')]",
        "dependsOn": [
          "deployAzureBastion",
          "deployLogAnalytics"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('deployAzureBastionDiagnosticsTemplateURL')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "workspaceId": {
                "value": "[reference('deployLogAnalytics').outputs.workspaceId.value]"
            },
            "logs": {
                "value": [
                  "BastionAuditLogs"
                ]
            },
            "bastionName": {
              "value": "[variables('bastionHostName')]"
            }
          }
        }  
      }
    ],
    "outputs": {
    } 
  }